@model student_management_dotnet.ViewModel.ReportDetailsViewModel

@{
    ViewData["Title"] = "Report Details";
}

<div class="max-w-4xl mx-auto px-4 sm:px-6 lg:px-8 py-8">
    <div class="mb-6">
        <h1 class="text-3xl font-bold text-gray-900">Report Details</h1>
        <p class="mt-2 text-sm text-gray-600">Viewing details for report submitted on @Model.ReportDate.ToShortDateString()</p>
    </div>

    <div class="bg-white shadow overflow-hidden rounded-lg">
        <div class="px-4 py-5 sm:px-6">
            <dl class="grid grid-cols-1 gap-x-4 gap-y-6 sm:grid-cols-2">
                <div>
                    <dt class="text-sm font-medium text-gray-500">Report Type</dt>
                    <dd class="mt-1 text-sm text-gray-900">@Model.ReportType</dd>
                </div>
                
                <div>
                    <dt class="text-sm font-medium text-gray-500">Status</dt>
                    <dd class="mt-1">
                        <span class="px-2 inline-flex text-xs leading-5 font-semibold rounded-full 
                            @(Model.Status == "Submitted" ? "bg-yellow-100 text-yellow-800" : 
                              Model.Status == "Graded" ? "bg-green-100 text-green-800" : 
                              "bg-red-100 text-red-800")">
                            @Model.Status
                        </span>
                    </dd>
                </div>

                <div>
                    <dt class="text-sm font-medium text-gray-500">Class</dt>
                    <dd class="mt-1 text-sm text-gray-900">@Model.ClassName</dd>
                </div>

                <div>
                    <dt class="text-sm font-medium text-gray-500">Course</dt>
                    <dd class="mt-1 text-sm text-gray-900">@Model.CourseName</dd>
                </div>

                <div>
                    <dt class="text-sm font-medium text-gray-500">Student Name</dt>
                    <dd class="mt-1 text-sm text-gray-900">@Model.StudentName</dd>
                </div>

                @if (Model.IsGraded)
                {
                    <div>
                        <dt class="text-sm font-medium text-gray-500">Score</dt>
                        <dd class="mt-1 text-sm text-gray-900">@Model.Score</dd>
                    </div>
                }

                <div class="sm:col-span-2">
                    <dt class="text-sm font-medium text-gray-500">Description</dt>
                    <dd class="mt-1 text-sm text-gray-900">@Model.Description</dd>
                </div>

                @if (!string.IsNullOrEmpty(Model.FilePath))
                {
                    <div class="sm:col-span-2">
                        <dt class="text-sm font-medium text-gray-500">Attached File</dt>
                        <dd class="mt-1">
                            <a href="@Url.Action("Download", new { id = Model.ReportId })" 
                               class="inline-flex items-center px-3 py-2 border border-gray-300 shadow-sm text-sm leading-4 font-medium rounded-md text-gray-700 bg-white hover:bg-gray-50 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-blue-500">
                                <svg class="mr-2 h-4 w-4" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M4 16v1a3 3 0 003 3h10a3 3 0 003-3v-1m-4-4l-4 4m0 0l-4-4m4 4V4"/>
                                </svg>
                                Download File
                            </a>
                        </dd>
                    </div>
                }

                @if (Model.IsGraded && !string.IsNullOrEmpty(Model.Comment))
                {
                    <div class="sm:col-span-2">
                        <dt class="text-sm font-medium text-gray-500">Grading Comments</dt>
                        <dd class="mt-1 text-sm text-gray-900">@Model.Comment</dd>
                    </div>
                }
            </dl>
        </div>
        
        <div class="px-4 py-3 bg-gray-50 text-right sm:px-6">
            <a href="@Url.Action("Index")" class="inline-flex justify-center py-2 px-4 border border-transparent shadow-sm text-sm font-medium rounded-md text-gray-700 bg-white hover:bg-gray-50 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-blue-500">
                Back to List
            </a>
            @if ((User.IsInRole("Teacher") || User.IsInRole("Admin")) && !Model.IsGraded)
            {
                <a href="@Url.Action("Grade", new { id = Model.ReportId })" class="ml-3 inline-flex justify-center py-2 px-4 border border-transparent shadow-sm text-sm font-medium rounded-md text-white bg-blue-600 hover:bg-blue-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-blue-500">
                    Grade Report
                </a>
            }
        </div>
    </div>
</div> 