@model student_management_dotnet.Models.Class

@{
    ViewData["Title"] = "Class Details";
}

<div class="container mx-auto px-4 py-8">
    <div class="flex items-center mb-6">
        <a asp-action="Index" class="text-blue-600 hover:text-blue-800 mr-4">
            <i class="fas fa-arrow-left"></i> Back to List
        </a>
        <h1 class="text-3xl font-bold text-gray-800">@Model.ClassName Details</h1>
    </div>

    <div class="bg-white shadow-md rounded-lg overflow-hidden mb-8">
        <div class="border-b border-gray-200">
            <div class="flex items-center justify-between px-6 py-4">
                <h2 class="text-xl font-semibold text-gray-800">Class Information</h2>
                <div>
                    <a asp-action="Edit" asp-route-id="@Model.ClassId" class="inline-flex items-center px-4 py-2 border border-transparent text-sm font-medium rounded-md text-white bg-blue-600 hover:bg-blue-700">
                        <i class="fas fa-edit mr-2"></i> Edit
                    </a>
                </div>
            </div>
        </div>
        
        <div class="p-6">
            <dl class="grid grid-cols-1 md:grid-cols-2 gap-x-4 gap-y-6">
                <div class="col-span-1">
                    <dt class="text-sm font-medium text-gray-500">Class Name</dt>
                    <dd class="mt-1 text-sm text-gray-900">@Model.ClassName</dd>
                </div>
                
                <div class="col-span-1">
                    <dt class="text-sm font-medium text-gray-500">Course</dt>
                    <dd class="mt-1 text-sm text-gray-900">@Model.Course.CourseName</dd>
                </div>
                
                <div class="col-span-1">
                    <dt class="text-sm font-medium text-gray-500">Teacher</dt>
                    <dd class="mt-1 text-sm text-gray-900">@Model.TeacherName</dd>
                </div>
                
                <div class="col-span-1">
                    <dt class="text-sm font-medium text-gray-500">Status</dt>
                    <dd class="mt-1 text-sm">
                        @{
                            string statusClass = Model.Status switch
                            {
                                "Open" => "bg-green-100 text-green-800",
                                "Closed" => "bg-red-100 text-red-800",
                                "Cancelled" => "bg-gray-100 text-gray-800",
                                _ => "bg-blue-100 text-blue-800"
                            };
                        }
                        <span class="px-2 py-1 inline-flex text-xs leading-5 font-semibold rounded-full @statusClass">
                            @Model.Status
                        </span>
                    </dd>
                </div>
                
                <div class="col-span-1">
                    <dt class="text-sm font-medium text-gray-500">Start Date</dt>
                    <dd class="mt-1 text-sm text-gray-900">@Model.StartDate.ToString("MMMM dd, yyyy")</dd>
                </div>
                
                <div class="col-span-1">
                    <dt class="text-sm font-medium text-gray-500">End Date</dt>
                    <dd class="mt-1 text-sm text-gray-900">@Model.EndDate.ToString("MMMM dd, yyyy")</dd>
                </div>
                
                <div class="col-span-1">
                    <dt class="text-sm font-medium text-gray-500">Enrollment</dt>
                    <dd class="mt-1 text-sm text-gray-900">
                        <div class="flex items-center">
                            <span class="@(Model.CurrentStudents >= Model.MaxStudents ? "text-red-600" : "text-green-600") font-semibold">
                                @Model.CurrentStudents / @Model.MaxStudents
                            </span>
                            <div class="ml-4 w-40 bg-gray-200 rounded-full h-2.5">
                                @{
                                    var percentage = (Model.CurrentStudents * 100) / (Model.MaxStudents > 0 ? Model.MaxStudents : 1);
                                    var barColor = percentage < 70 ? "bg-green-600" : percentage < 90 ? "bg-yellow-400" : "bg-red-600";
                                }
                                <div class="@barColor h-2.5 rounded-full" style="width: @percentage%"></div>
                            </div>
                        </div>
                    </dd>
                </div>
                
                <div class="col-span-1">
                    <dt class="text-sm font-medium text-gray-500">Created At</dt>
                    <dd class="mt-1 text-sm text-gray-900">@Model.CreatedAt.ToString("MMM dd, yyyy HH:mm")</dd>
                </div>
                
                <div class="col-span-1">
                    <dt class="text-sm font-medium text-gray-500">Last Updated</dt>
                    <dd class="mt-1 text-sm text-gray-900">@Model.UpdatedAt.ToString("MMM dd, yyyy HH:mm")</dd>
                </div>
            </dl>
        </div>
    </div>
    
    @if (Model.Enrollments != null && Model.Enrollments.Any())
    {
        <div class="bg-white shadow-md rounded-lg overflow-hidden mb-8">
            <div class="border-b border-gray-200">
                <div class="px-6 py-4">
                    <h2 class="text-xl font-semibold text-gray-800">Enrolled Students (@Model.Enrollments.Count())</h2>
                </div>
            </div>
            
            <div class="overflow-x-auto">
                <table class="min-w-full divide-y divide-gray-200">
                    <thead class="bg-gray-50">
                        <tr>
                            <th scope="col" class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">
                                Student Name
                            </th>
                            <th scope="col" class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">
                                Enrollment Date
                            </th>
                            <th scope="col" class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">
                                Status
                            </th>
                        </tr>
                    </thead>
                    <tbody class="bg-white divide-y divide-gray-200">
                        @foreach (var enrollment in Model.Enrollments)
                        {
                            <tr>
                                <td class="px-6 py-4 whitespace-nowrap text-sm text-gray-500">
                                    @enrollment.EnrollmentDate.ToString("MMM dd, yyyy")
                                </td>
                                <td class="px-6 py-4 whitespace-nowrap">
                                    @{
                                        string enrollStatusClass = enrollment.Status switch
                                        {
                                            "Active" => "bg-green-100 text-green-800",
                                            "Dropped" => "bg-red-100 text-red-800",
                                            "Completed" => "bg-blue-100 text-blue-800",
                                            _ => "bg-gray-100 text-gray-800"
                                        };
                                    }
                                    <span class="px-2 inline-flex text-xs leading-5 font-semibold rounded-full @enrollStatusClass">
                                        @enrollment.Status
                                    </span>
                                </td>
                            </tr>
                        }
                    </tbody>
                </table>
            </div>
        </div>
    }
    
    @if (Model.ClassSchedules != null && Model.ClassSchedules.Any())
    {
        <div class="bg-white shadow-md rounded-lg overflow-hidden">
            <div class="border-b border-gray-200">
                <div class="px-6 py-4">
                    <h2 class="text-xl font-semibold text-gray-800">Class Schedule</h2>
                </div>
            </div>
            
            <div class="p-6">
                <div class="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-4">
                    @foreach (var schedule in Model.ClassSchedules.OrderBy(s => s.DayOfWeek).ThenBy(s => s.StartTime))
                    {
                        <div class="bg-gray-50 rounded-lg p-4 border border-gray-200">
                            <div class="font-medium text-gray-800">@schedule.DayOfWeek</div>
                            <div class="text-sm text-gray-600 mt-1">
                                @schedule.StartTime.ToString("hh\\:mm") - @schedule.EndTime.ToString("hh\\:mm")
                            </div>
                            @if (!string.IsNullOrEmpty(schedule.Room))
                            {
                                <div class="text-sm text-gray-500 mt-1">
                                    <i class="fas fa-map-marker-alt mr-1"></i> Room: @schedule.Room
                                </div>
                            }
                        </div>
                    }
                </div>
            </div>
        </div>
    }
</div>