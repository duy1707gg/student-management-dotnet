@model student_management_dotnet.ViewModel.CreateClassViewModel

@{
    ViewData["Title"] = "Create Class";
}

<div class="container mx-auto px-4 py-8">
    <div class="flex items-center mb-6">
        <a asp-action="Index" class="text-blue-600 hover:text-blue-800 mr-4 flex items-center transition duration-150 ease-in-out">
            <svg xmlns="http://www.w3.org/2000/svg" class="h-5 w-5 mr-1" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M10 19l-7-7m0 0l7-7m-7 7h18" />
            </svg>
            Back to List
        </a>
        <h1 class="text-3xl font-bold text-gray-800">Create New Class</h1>
    </div>

    @if (TempData["ErrorMessage"] != null)
    {
        <div class="p-4 mb-4 text-sm text-red-700 bg-red-100 rounded-lg">
            @TempData["ErrorMessage"]
        </div>
    }

    <div class="bg-white shadow-lg rounded-lg overflow-hidden p-6 max-w-4xl mx-auto border border-gray-100">
        <form asp-controller="Class" asp-action="Create" method="post">
            <div asp-validation-summary="ModelOnly" class="p-4 mb-4 text-sm text-red-700 bg-red-100 rounded-lg"></div>

            <div class="grid grid-cols-1 md:grid-cols-2 gap-x-6 gap-y-5">
                <!-- Course selection -->
                <div>
                    <label asp-for="CourseId" class="block text-sm font-medium text-gray-700 mb-1"></label>
                    <select asp-for="CourseId" asp-items="Model.CourseSelectList"
                            class="mt-1 block w-full rounded-md border-gray-300 shadow-sm focus:border-blue-500 focus:ring focus:ring-blue-500 focus:ring-opacity-50 transition duration-150 ease-in-out">
                        <option value="">-- Select Course --</option>
                    </select>
                    <span asp-validation-for="CourseId" class="mt-1 text-red-600 text-xs"></span>
                </div>

                <!-- Class name -->
                <div>
                    <label asp-for="ClassName" class="block text-sm font-medium text-gray-700 mb-1"></label>
                    <input asp-for="ClassName"
                           class="mt-1 block w-full rounded-md border-gray-300 shadow-sm focus:border-blue-500 focus:ring focus:ring-blue-500 focus:ring-opacity-50 transition duration-150 ease-in-out" />
                    <span asp-validation-for="ClassName" class="mt-1 text-red-600 text-xs"></span>
                </div>

                <!-- Teacher name -->
                <div>
                    <label asp-for="TeacherName" class="block text-sm font-medium text-gray-700 mb-1"></label>
                    <input asp-for="TeacherName"
                           class="mt-1 block w-full rounded-md border-gray-300 shadow-sm focus:border-blue-500 focus:ring focus:ring-blue-500 focus:ring-opacity-50 transition duration-150 ease-in-out" />
                    <span asp-validation-for="TeacherName" class="mt-1 text-red-600 text-xs"></span>
                </div>

                <!-- Max students -->
                <div>
                    <label asp-for="MaxStudents" class="block text-sm font-medium text-gray-700 mb-1"></label>
                    <input asp-for="MaxStudents" type="number" min="1"
                           class="mt-1 block w-full rounded-md border-gray-300 shadow-sm focus:border-blue-500 focus:ring focus:ring-blue-500 focus:ring-opacity-50 transition duration-150 ease-in-out" />
                    <span asp-validation-for="MaxStudents" class="mt-1 text-red-600 text-xs"></span>
                </div>

                <!-- Start date -->
                <div>
                    <label asp-for="StartDate" class="block text-sm font-medium text-gray-700 mb-1"></label>
                    <input asp-for="StartDate" type="date"
                           class="mt-1 block w-full rounded-md border-gray-300 shadow-sm focus:border-blue-500 focus:ring focus:ring-blue-500 focus:ring-opacity-50 transition duration-150 ease-in-out" />
                    <span asp-validation-for="StartDate" class="mt-1 text-red-600 text-xs"></span>
                </div>

                <!-- End date -->
                <div>
                    <label asp-for="EndDate" class="block text-sm font-medium text-gray-700 mb-1"></label>
                    <input asp-for="EndDate" type="date"
                           class="mt-1 block w-full rounded-md border-gray-300 shadow-sm focus:border-blue-500 focus:ring focus:ring-blue-500 focus:ring-opacity-50 transition duration-150 ease-in-out" />
                    <span asp-validation-for="EndDate" class="mt-1 text-red-600 text-xs"></span>
                </div>

                <!-- Status -->
                <div>
                    <label asp-for="Status" class="block text-sm font-medium text-gray-700 mb-1"></label>
                    <select asp-for="Status" class="mt-1 block w-full rounded-md border-gray-300 shadow-sm focus:border-blue-500 focus:ring focus:ring-blue-500 focus:ring-opacity-50 transition duration-150 ease-in-out">
                        <option value="">-- Select Status --</option>
                        @foreach (var status in Model.StatusOptions)
                        {
                            <option value="@status">@status</option>
                        }
                    </select>
                    <span asp-validation-for="Status" class="mt-1 text-red-600 text-xs"></span>
                </div>
            </div>

            <!-- Submit button -->
            <div class="mt-6 flex justify-end">
                <button type="submit"
                        class="inline-flex justify-center py-2 px-4 border border-transparent shadow-sm text-sm font-medium rounded-md text-white bg-blue-600 hover:bg-blue-700 focus:outline-none transition duration-150 ease-in-out">
                    Create Class
                </button>
            </div>
        </form>
    </div>
</div>

@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
    
    <script>
        // Date validation: End date should be after start date
        document.addEventListener('DOMContentLoaded', function () {
            const startDateInput = document.getElementById('StartDate');
            const endDateInput = document.getElementById('EndDate');
            
            function validateDates() {
                const startDate = new Date(startDateInput.value);
                const endDate = new Date(endDateInput.value);
                
                if (endDate <= startDate) {
                    endDateInput.setCustomValidity('End date must be after start date');
                } else {
                    endDateInput.setCustomValidity('');
                }
            }
            
            startDateInput.addEventListener('change', validateDates);
            endDateInput.addEventListener('change', validateDates);
            
            // Validate dates on form submit
            const form = document.querySelector('form');
            form.addEventListener('submit', validateDates);
        });
    </script>
}