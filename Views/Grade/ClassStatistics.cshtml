@model student_management_dotnet.ViewModel.ClassGradeStatisticsViewModel

@{
    ViewData["Title"] = "Class Statistics";
}

<div class="max-w-6xl mx-auto p-6">
    <div class="mb-6">
        <h1 class="text-3xl font-bold text-gray-800">Class Statistics</h1>
        <p class="text-gray-600 mt-2">Grade statistics for @Model.ClassName</p>
    </div>

    <!-- Class Information Card -->
    <div class="bg-white rounded-lg shadow-md p-6 mb-6">
        <div class="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-4">
            <div class="p-4 bg-gray-50 rounded-lg">
                <h3 class="text-sm font-semibold text-gray-600">Class</h3>
                <p class="text-lg font-bold text-gray-800">@Model.ClassName</p>
            </div>
            <div class="p-4 bg-gray-50 rounded-lg">
                <h3 class="text-sm font-semibold text-gray-600">Course</h3>
                <p class="text-lg font-bold text-gray-800">@Model.CourseName</p>
            </div>
            <div class="p-4 bg-gray-50 rounded-lg">
                <h3 class="text-sm font-semibold text-gray-600">Teacher</h3>
                <p class="text-lg font-bold text-gray-800">@Model.TeacherName</p>
            </div>
            <div class="p-4 bg-gray-50 rounded-lg">
                <h3 class="text-sm font-semibold text-gray-600">Enrolled Students</h3>
                <p class="text-lg font-bold text-gray-800">@Model.EnrolledStudents</p>
            </div>
        </div>
    </div>

    <!-- Grade Statistics Cards -->
    <div class="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-6 mb-6">
        <!-- Class Average -->
        <div class="bg-blue-50 rounded-lg shadow p-6">
            <h3 class="text-blue-800 font-semibold mb-2">Class Average</h3>
            <p class="text-3xl font-bold text-blue-600">@Model.ClassAverage.ToString("F1")</p>
        </div>

        <!-- Highest Grade -->
        <div class="bg-green-50 rounded-lg shadow p-6">
            <h3 class="text-green-800 font-semibold mb-2">Highest Grade</h3>
            <p class="text-3xl font-bold text-green-600">@Model.HighestGrade.ToString("F1")</p>
        </div>

        <!-- Lowest Grade -->
        <div class="bg-red-50 rounded-lg shadow p-6">
            <h3 class="text-red-800 font-semibold mb-2">Lowest Grade</h3>
            <p class="text-3xl font-bold text-red-600">@Model.LowestGrade.ToString("F1")</p>
        </div>

        <!-- Median Grade -->
        <div class="bg-purple-50 rounded-lg shadow p-6">
            <h3 class="text-purple-800 font-semibold mb-2">Median Grade</h3>
            <p class="text-3xl font-bold text-purple-600">@Model.MedianGrade.ToString("F1")</p>
        </div>
    </div>

    <!-- Grade Distribution -->
    @if (Model.GradeDistribution != null && Model.GradeDistribution.Any())
    {
        <div class="bg-white rounded-lg shadow-md p-6 mb-6">
            <h2 class="text-xl font-bold text-gray-800 mb-4">Grade Distribution</h2>
            <div class="grid grid-cols-5 gap-4">
                @foreach (var grade in Model.GradeDistribution)
                {
                    <div class="text-center">
                        <div class="mb-2">
                            <span class="text-lg font-bold">@grade.Key</span>
                        </div>
                        <div class="bg-gray-200 rounded-full h-24 relative">
                            @{
                                var percentage = (grade.Value / (float)Model.EnrolledStudents) * 100;
                                var height = Math.Max(percentage, 5); // Minimum 5% height for visibility
                            }
                            <div class="absolute bottom-0 left-0 right-0 bg-blue-500 rounded-full"
                                 style="height: @height%">
                            </div>
                        </div>
                        <div class="mt-2">
                            <span class="text-sm text-gray-600">@grade.Value students</span>
                        </div>
                    </div>
                }
            </div>
        </div>
    }

    <!-- Exam Type Averages -->
    @if (Model.ExamTypeAverages != null && Model.ExamTypeAverages.Any())
    {
        <div class="bg-white rounded-lg shadow-md p-6 mb-6">
            <h2 class="text-xl font-bold text-gray-800 mb-4">Exam Type Averages</h2>
            <div class="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-4">
                @foreach (var examType in Model.ExamTypeAverages)
                {
                    <div class="p-4 bg-gray-50 rounded-lg">
                        <h3 class="text-sm font-semibold text-gray-600">@examType.Key</h3>
                        <p class="text-lg font-bold text-gray-800">@examType.Value.ToString("F1")%</p>
                    </div>
                }
            </div>
        </div>
    }

    <!-- Top Performers -->
    @if (Model.TopPerformers != null && Model.TopPerformers.Any())
    {
        <div class="bg-white rounded-lg shadow-md p-6 mb-6">
            <h2 class="text-xl font-bold text-gray-800 mb-4">Top Performers</h2>
            <div class="overflow-x-auto">
                <table class="min-w-full divide-y divide-gray-200">
                    <thead class="bg-gray-50">
                        <tr>
                            <th class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">Student</th>
                            <th class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">Average Grade</th>
                            <th class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">Completed Assignments</th>
                        </tr>
                    </thead>
                    <tbody class="bg-white divide-y divide-gray-200">
                        @foreach (var student in Model.TopPerformers)
                        {
                            <tr>
                                <td class="px-6 py-4 whitespace-nowrap text-sm font-medium text-gray-900">
                                    @student.StudentName
                                </td>
                                <td class="px-6 py-4 whitespace-nowrap text-sm text-gray-500">
                                    @student.AverageGrade.ToString("F1")%
                                </td>
                                <td class="px-6 py-4 whitespace-nowrap text-sm text-gray-500">
                                    @student.CompletedAssignments
                                </td>
                            </tr>
                        }
                    </tbody>
                </table>
            </div>
        </div>
    }

    <!-- Action Buttons -->
    <div class="flex justify-between items-center">
        <a asp-action="Index" asp-controller="Class" 
           class="bg-gray-500 hover:bg-gray-600 text-white font-bold py-2 px-4 rounded">
            Back to Classes
        </a>
        
        <a asp-action="Create" asp-controller="Grade" asp-route-classId="@Model.ClassId"
           class="bg-blue-500 hover:bg-blue-600 text-white font-bold py-2 px-4 rounded">
            Add New Grade
        </a>
    </div>
</div>